#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass amsart
\begin_preamble
\allowdisplaybreaks
\DeclareMathOperator{\E}{E}
\DeclareMathOperator{\Var}{Var}
\DeclareMathOperator{\Cov}{Cov}
\DeclareMathOperator{\dif}{d}
\DeclareMathOperator*{\argmin}{arg\,min}
\DeclareMathOperator{\tr}{tr}
\usepackage{algpseudocode}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
knitr
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5in
\topmargin 1.5in
\rightmargin 1.5in
\bottommargin 1.5in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Online Detection of Unusual Events in Audio via Dynamic Sparse Coding
\end_layout

\begin_layout Author
Courtney Grazzini
\begin_inset Newline newline
\end_inset

Meredith Miller
\begin_inset Newline newline
\end_inset

Sean Wilson
\end_layout

\begin_layout Abstract
Sparse representation of a natural signal in terms of a dictionary learned
 from the signal itself has been shown to be highly effective.
 Online methods for dictionary learning mitigate scalability issues with
 traditional batch learning methods, and offer the ability to learn dictionaries
 for streaming signals.
 We review the key concepts of sparse dictionary learning and important
 results related to the online extension of such methods.
 We show that online dictionary learning can be used to detect unusual events
 in audio signals, such as a change in meter or the appearance of a new
 instrument, and that such methods are robust to concept drift in the target
 signal.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Dictionary learning
\end_layout

\begin_layout Standard
We can represent a signal as a linear combination of basis elements.
 We refer to the basis elements as 
\emph on
atoms
\emph default
, and to the collection of these elements as a 
\emph on
dictionary
\emph default
.
 We do not require that the atoms be linearly independent, and we allow
 the dictionary to be 
\emph on
overcomplete
\emph default
, i.e., it may contain more basis elements than the dimension of the signal
 it is used to represent.
\end_layout

\begin_layout Standard
Predefined dictionaries are often used to represent signals.
 Let 
\begin_inset Formula $\mathcal{D}=\left\{ \mathbf{u},\mathbf{v}\right\} $
\end_inset

 for some linearly independent 
\begin_inset Formula $\mathbf{u},\mathbf{v}\in\mathbb{R}^{2}$
\end_inset

.
 Then, we can represent any signal 
\begin_inset Formula $\mathbf{x}\in\mathbb{R}^{2}$
\end_inset

 in terms of the atoms 
\begin_inset Formula $\mathbf{u}$
\end_inset

 and 
\begin_inset Formula $\mathbf{v}$
\end_inset

 of the dictionary 
\begin_inset Formula $\mathcal{D}$
\end_inset

.
 We might similarly consider the two-dimensional Haar wavelet basis on the
 space of real, 
\begin_inset Formula $2\times2$
\end_inset

 matrices, whose elements can be used to encode images.
 In place of a predefined dictionary, we may also choose to learn a dictionary
 directly from the signal of interest, a procedure that has been shown,
 e.g., by 
\begin_inset CommandInset citation
LatexCommand cite
key "Elad2006"

\end_inset

, to perform as well as or better than the predefined approach.
\end_layout

\begin_layout Standard
A signal 
\begin_inset Formula $\mathbf{x}\in\mathbb{R}^{n}$
\end_inset

 is said to have a 
\begin_inset Formula $k$
\end_inset


\emph on
-sparse representation
\emph default
 in a dictionary 
\begin_inset Formula $\mathcal{D}=\left\{ \mathbf{v}_{i}\right\} _{i\in\mathcal{I}}\subset\mathbb{R}^{n}$
\end_inset

 if there is a system of coefficients 
\begin_inset Formula $\left\{ c_{i}\right\} _{i\in\mathcal{I}}$
\end_inset

 such that 
\begin_inset Formula $\mathbf{x}=\sum_{i\in\mathcal{I}}c_{i}\mathbf{v}_{i}$
\end_inset

 and 
\begin_inset Formula $c_{i}\neq0$
\end_inset

 for at most 
\begin_inset Formula $k$
\end_inset

 many indices 
\begin_inset Formula $i\in\mathcal{I}$
\end_inset

.
 A sparse representation of 
\begin_inset Formula $\mathbf{x}$
\end_inset

 may be preferable to a 
\begin_inset Quotes eld
\end_inset

dense
\begin_inset Quotes erd
\end_inset

 representation (assuming that both representations have similar reconstruction
 performance) for two primary reasons.
 The first is the principle of parsimony (or model interpretability): if
 we can represent the signal with relatively few atoms (the coefficients
 of the remaining atoms being zero), our understanding of the signal is
 easier to characterize than if we had to interpret the effects of a larger
 number of atoms.
 I.e., we have identified redundancy in the atoms relative to the signal.
 The second is computational efficiency: fewer nonzero coefficients means
 that we can represent and manipulate the signal using fewer resources.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Elad2006"

\end_inset

 and others have shown sparse representions of natural signals to be very
 effective.
 Thus, our task in 
\emph on
dictionary learning
\emph default
 given some signal 
\begin_inset Formula $\mathbf{x}$
\end_inset

 is to learn a dictionary 
\begin_inset Formula $\mathcal{D}$
\end_inset

 such that 
\begin_inset Formula $\mathbf{x}$
\end_inset

 has a sparse representation in terms of the atoms of 
\begin_inset Formula $\mathcal{D}$
\end_inset

.
\end_layout

\begin_layout Subsection
Online learning
\end_layout

\begin_layout Standard
A dictionary is typically learned from a training set (possibly the signal
 to be reconstructed) using a constrained optimization procedure.
 We can implement this optimization as a 
\emph on
batch
\emph default
 procedure, wherein the entire training set is used at each iteration.
 While such methods have been shown to be effective, they do not scale well
 to very large training sets, or to training sets that vary over time, e.g.,
 streaming audio or video signals.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Mairal2009"

\end_inset

 propose an 
\emph on
online
\emph default
 approach to overcome these limitations, wherein the elements of the training
 set are accessed one at a time or in small batches.
\end_layout

\begin_layout Standard
When learning a dictionary for a streaming signal, our approach must also
 account for the phenomenon of 
\emph on
concept drift
\emph default
, wherein the statistical properties of the signal change unpredictably
 over time.
 If our learning method does not allow the dictionary to adapt to these
 changes, then reconstruction performance will degrade as we attempt to
 represent portions of the signal that the dictionary has not previously
 
\begin_inset Quotes eld
\end_inset

seen.
\begin_inset Quotes erd
\end_inset

 For example, if we wish to respresent the video feed of a traffic camera,
 we are likely to learn a dictionary well suited to representing various
 motor vehicles.
 If the same street is closed for a parade, our dictionary is not likely
 to perform acceptably when reconstructing a marching band.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Zhao2011"

\end_inset

 have shown that online algorithms are robust to concept drift precisely
 because they permit the dictionary to adapt to new phenomena.
\end_layout

\begin_layout Section
Methodology - Courtney to start
\end_layout

\begin_layout Standard
A learning dictionary algorithm from 
\begin_inset CommandInset citation
LatexCommand cite
key "Mairal2009"

\end_inset

 has been implemented to identify unusual events that occur in the song,
 "Bohemian Rhaspody," by Queen.
 The first user defined t seconds are used to define the initial dictionary
 with the sparse coding algorithm.
 The algorithm employs a sliding window technique that moves through the
 song to identify events, t second portions of the song.
 These events are stored as a set of vectors, 
\begin_inset Formula ${\bf {\bf X=\{{\bf X_{1},...,{\bf X_{m}\}}}}}$
\end_inset

.
 Each event is examined in the algorithm to detect changes in the song that
 differ from the previous dictionary and learns new patterns that then updates
 the dictionary 
\begin_inset Formula ${\bf D}$
\end_inset

 online.
 Additionally, a reconstruction weight vector is learned for each event.
 This weight vector is used to calculate the mean squared error.
 
\end_layout

\begin_layout Standard
We wish to optimize the following cost function: 
\begin_inset Formula $f_{n}({\bf D)\triangleq\frac{1}{n}\sum_{i=1}^{n}l(x_{i},{\bf D)}}$
\end_inset

, where 
\begin_inset Formula $l(x_{i},{\bf D)}$
\end_inset

 is the loss function.
 Each column in 
\begin_inset Formula $\mathbf{D}$
\end_inset

 is a basis vector.
 Minimizing the loss functions leaves us with the following problem: 
\begin_inset Formula 
\begin{equation}
{\displaystyle \min_{{\bf D\in C,{\bf \alpha\in\mathbb{R}^{kxn}}}}\frac{1}{n}\sum_{i=1}^{n}\left(\frac{1}{2}\Vert x_{i}-{\bf D{\bf \alpha_{i}\Vert_{2}^{2}+\lambda\Vert{\bf \alpha_{i}\Vert_{1}}}}\right),}
\end{equation}

\end_inset

 where 
\begin_inset Formula $\lambda$
\end_inset

 is the regularization parameter.
 This is essentially basis pursuit.
 It is important to note that this equation is only convex with respect
 to either 
\begin_inset Formula ${\bf D}$
\end_inset

 or 
\begin_inset Formula ${\bf \alpha}$
\end_inset

 while the other is fixed.
 Stochatic gradient descent is used to make updates to the dictionary: 
\begin_inset Formula 
\begin{equation}
{\bf D_{t}=\prod_{C}\left[{\bf D_{t-1}-\frac{\rho}{t}\bigtriangledown Dl(x_{i},{\bf D_{t-1}}}\right].}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithmic}[1]
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
State
\end_layout

\end_inset

 REQUIRE: 
\begin_inset Formula ${\bf x}\in\mathbb{R}^{m}$
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 (event)~p(x) (algorithm to drawsamples),
\begin_inset Formula $\lambda\in\mathbb{R}$
\end_inset

 (regularization parameter),
\begin_inset Formula ${\bf D_{0}\in\mathbb{R}^{mxk}}$
\end_inset

 (initial dictionary), T (number of iterations).
\end_layout

\begin_layout Plain Layout
\begin_inset Formula $A_{0}\leftarrow0$
\end_inset

, 
\begin_inset Formula $B_{0}\leftarrow0$
\end_inset

 (reset the "past" information)
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
For{$t=1$ to $T$}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
State
\end_layout

\end_inset

 Draw 
\begin_inset Formula $x_{i}$
\end_inset

 from p(x).
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
State
\end_layout

\end_inset

 Sparse coding: compuse using LARS
\begin_inset Formula 
\begin{equation}
\alpha_{t}\triangleq{\displaystyle \min_{\alpha\in\mathbb{R}^{k}}\frac{1}{t}\Vert x_{t}-{\bf {D}_{t-1}\alpha\Vert_{2}^{2}+\lambda\Vert\alpha\Vert_{1}}}
\end{equation}

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
State
\end_layout

\end_inset

 
\begin_inset Formula $A_{t}\leftarrow A_{t-1}+\alpha_{t}\alpha_{t}^{T}$
\end_inset

.
 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
State
\end_layout

\end_inset

 
\begin_inset Formula $B_{t}\leftarrow B_{t-1}+x_{t}\alpha_{t}^{T}$
\end_inset

.
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
State
\end_layout

\end_inset

 Compute 
\begin_inset Formula ${\bf D_{t}}$
\end_inset

 using Algorithm 2 with 
\begin_inset Formula ${\bf D_{t-1}}$
\end_inset

 as warm restart, so that 
\begin_inset Formula 
\begin{equation}
{\bf D_{t}}\triangleq{\displaystyle \min_{{\bf D\in C}}\frac{1}{t}{\displaystyle \sum_{i=1}^{t}\frac{1}{2}\Vert x_{i}-{\bf D\alpha_{i}\Vert_{2}^{2}+\lambda\Vert\alpha_{i}\Vert_{1}}}}={\displaystyle \min_{{\bf D\in C}}\frac{1}{t}\left(\frac{1}{2}Tr({\bf D^{T}{\bf DA_{t})-Tr({\bf D^{T}B_{t})}}}\right).}
\end{equation}

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
EndFor
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Return{$
\backslash
mathbf{D}_{t}$ (learned dictionary)}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{algorithmic}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Online dictionary learning
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Definition of unusual event / change point detection / whatever
\end_layout

\begin_layout Standard
algorithm for unusual event detection, probably similar to 
\begin_inset CommandInset citation
LatexCommand cite
key "Zhao2011"

\end_inset


\end_layout

\begin_layout Section
Application - TBD after code done
\end_layout

\begin_layout Subsection
Structure of an audio signal
\end_layout

\begin_layout Standard
We now consider the problem of creating a digital representation of an (analog)
 audio signal.
 The signal is continuous as a function of time, so to digitize it we take
 discrete 
\emph on
samples
\emph default
.
 Each sample quantizes the 
\emph on
amplitude
\emph default
 of the signal at a point in time.
 The 
\emph on
sampling rate
\emph default
 is the average number of samples obtained in one second.
 The resolution of each sample corresponds to the number of possible values
 of the amplitude, which is given by the 
\emph on
bit depth
\emph default
.
 We may also consider the number of 
\emph on
channels
\emph default
 used to represent a signal, each of which corresponds to a separate data
 stream that must be sampled.
\end_layout

\begin_layout Subsection
What kind of dictionary could we learn for an audio signal
\end_layout

\begin_layout Standard
why might we want to do online learning for an audio signal (consider a
 stream, or a huge data set, or whatever), but biggest idea is that online
 learning allows us to detect unusual events (if we learn on the whole data
 set, then possibly our dictionary will learn the unusual events, impeding
 our ability to identify them)
\end_layout

\begin_layout Standard
maybe insert image of different waveforms, e.g., as in 
\begin_inset CommandInset href
LatexCommand href
name "http://www.seaandsailor.com/dictlearning.html"
target "http://www.seaandsailor.com/dictlearning.html"

\end_inset


\end_layout

\begin_layout Subsection
Unusual event as applied to an audio signal
\end_layout

\begin_layout Standard
Change in meter, key change, whatever
\end_layout

\begin_layout Subsection
Test case - Meredith/Sean
\end_layout

\begin_layout Standard
We consider the song 
\begin_inset Quotes eld
\end_inset

Bohemian Rhapsody
\begin_inset Quotes erd
\end_inset

 by Queen.
 For simplicity, we store the signal in the Waveform Audio File Format (WAV)
 with a sampling rate of 16,000 Hz, a bit depth of 16, and a single, i.e.,
 monaural, channel.
\end_layout

\begin_layout Standard
\begin_inset Quotes eld
\end_inset

Bohemian Rhapsody
\begin_inset Quotes erd
\end_inset

 WAV or whatever, walk through the code, include graphics, especially SSE/MSE
 whatever reconstruction, and map peaks in error to 
\begin_inset Quotes eld
\end_inset

events
\begin_inset Quotes erd
\end_inset

 (hopefully, unusual) in song
\end_layout

\begin_layout Standard
This is how to add a Python 3 code chunk.
 knitr does not support Python plotting out of the box, but fortunately
 the knitron package makes it possible:
\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
target "https://github.com/fhirschmann/knitron"

\end_inset


\end_layout

\begin_layout Standard
Follow the instructions there to set it up, then load the package in hidden
 chunk.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<setup, echo = F>>=
\end_layout

\begin_layout Plain Layout

# library(knitron)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
We are now ready to run some Python code.
 Notice chunk option engine = 'ipython'.
 You'll need to install scipy, matplotlib, and numpy, which can be done
 with pip3 install scipy, matplotlib (numpy is a scipy dependency).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<example, engine = 'ipython', fig.height = 3, fig.width = 5, fig.align = 'center',
 fig.pos = 'h', fig.cap = 'figure caption'>>=
\end_layout

\begin_layout Plain Layout

# knitron already imports matplotlib for us
\end_layout

\begin_layout Plain Layout

# import matplotlib.pyplot as plt
\end_layout

\begin_layout Plain Layout

import scipy as sc
\end_layout

\begin_layout Plain Layout

import numpy as np
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Load signal used to build the dictionary
\end_layout

\begin_layout Plain Layout

from scipy.io import wavfile
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

import os
\end_layout

\begin_layout Plain Layout

# fs, data = wavfile.read("03 Shot In The Back Of The Head.wav")
\end_layout

\begin_layout Plain Layout

# data = data / 2.0**15
\end_layout

\begin_layout Plain Layout

# print(data.shape)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# plt.rcParams.update({'font.size': 10})
\end_layout

\begin_layout Plain Layout

         
\end_layout

\begin_layout Plain Layout

# plt.plot(data[0:fs*5]) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Include table of unusual events (key change, meter change, new instrument
 comes in)
\end_layout

\begin_layout Section
Discussion - TBD
\end_layout

\begin_layout Standard
how did the algorithm perform, how could it be extended
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "library"
options "apalike"

\end_inset


\end_layout

\end_body
\end_document
